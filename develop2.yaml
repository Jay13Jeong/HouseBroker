version: '3'
services:
  mariadb:
    container_name: mariadb
    image: mariadb
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD:   ${DB_ROOT_PASSWORD}
      MARIADB_DATABASE: mydb
      MARIADB_USER:  ${DB_USER}
      MARIADB_PASSWORD:  ${DB_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - type: bind
        source: ${HOME}/kiwi_data/DB
        target: /var/lib/mysql
    networks:
      - jg

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - mariadb
    environment:
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/mydb
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      GOOGLE_AUTH_CLIENT_ID: ${GOOGLE_AUTH_CLIENT_ID}
      GOOGLE_ACCESS_SECRET: ${GOOGLE_ACCESS_SECRET}
      GOOGLE_AUTH_CALLBACK_URL: ${GOOGLE_AUTH_CALLBACK_URL}
      JWTKEY: ${JWT_SECRET}
      SERVER_HOST: ${SERVER_HOST}
      DOMAIN: ${DOMAIN}
      UPLOAD_DIR: "/uploadImages/" #volumes랑 의존됨.
    # ports:
    #   - 8080:8080
    expose:
      - 8080
    volumes:
      - type: bind
        source: ./backend/src
        target: /my_backend/src
      - type: bind
        source: ${HOME}/kiwi_data/upload_images
        target: /uploadImages
    networks:
      - jg

  frontend:
    container_name: frontend
    restart: always
    environment:
      - REACT_APP_MY_LOCATE_X=${MY_LOCATE_X}
      - REACT_APP_MY_LOCATE_Y=${MY_LOCATE_Y}
      - REACT_APP_KAKAO_MAP_KEY=${KAKAO_MAP_KEY}
      - REACT_APP_PHONE_NUMBER=${APP_PHONE_NUMBER}
      - REACT_APP_PHONE_INFO=${APP_PHONE_INFO}
      - REACT_APP_LOCATION=${APP_LOCATION}
      - REACT_APP_NAME=${APP_NAME}
      - REACT_APP_HOST=${SERVER_HOST}
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
    build:
      context: ./front
      dockerfile: Dockerfile
    networks:
      - jg
    ports:
      - 3000:3000
    volumes:
      - ./front/src:/my_front/src

  nginx:
    container_name: proxy
    restart: always
    ports:
      - 80:80
    depends_on:
      - backend
      - frontend
    environment:
      - SERVER_HOST=${SERVER_HOST}
    build: ./proxy
    networks:
      - jg
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./proxy/templates:/templates:ro
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

networks:
  jg:
    name: my_network
    driver: bridge
upstream front {
  server frontend:3000;
}

upstream spring {
  server backend:8080;
}

server {
  listen 80;
  server_name red;

  location / {
    rewrite ^ ${DOMAIN} permanent;
  }
  # location /error-404 {
  #   return 301 ${DOMAIN};
  # }
}

server {
  listen 443 ssl;
	listen [::]:443 ssl;
  server_name ${SERVER_HOST};

  ssl_certificate /etc/ssl/jjeong_ssl.pem;
	ssl_certificate_key /etc/ssl/jjeong_ssl.key;
	ssl_protocols TLSv1.2 TLSv1.3;

  location / {
    # SERVER_HOST가 아닌 도메인으로의 요청을 SERVER_HOST로 리다이렉트.
    if ($host != ${SERVER_HOST}) {
        rewrite ^ ${DOMAIN} permanent;
    }
    proxy_pass http://front;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    client_max_body_size 10M;
  }

  location /api {
    if ($host != ${SERVER_HOST}) {
        rewrite ^ ${DOMAIN} permanent;
    }
    proxy_pass http://spring;
    proxy_http_version 1.1;
    client_max_body_size 10M;
  }

  location /api/ws {
    if ($host != ${SERVER_HOST}) {
        rewrite ^ ${DOMAIN} permanent;
    }
    proxy_buffering on;
    proxy_pass http://spring;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
  }
}
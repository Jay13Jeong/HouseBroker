version: '3.9'
services:
  test_mariadb:
    container_name: mariadb2
    image: mariadb
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD:   ${DB_ROOT_PASSWORD}
      MARIADB_DATABASE: mydb
      MARIADB_USER:  ${DB_USER}
      MARIADB_PASSWORD:  ${DB_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - type: bind
        source: $HOME/kiwi_data/DB
        target: /var/lib/mysql
    networks:
      - test

  test_postgresql:
    image: postgres:16.2-alpine3.19
    restart: always
    # shm_size: 128mb # for gui memory
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: mydb
    ports:
      - 5432:5432
    volumes:
      - type: bind
        source: $HOME/kiwi_data/DB2
        target: /var/lib/postgresql/data
    networks:
      - test

  jaeger:
    image: jaegertracing/all-in-one:1.54
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "6831:6831/udp" # accept jaeger.thrift over compact thrift protocol
      - "6832:6832/udp" # accept jaeger.thrift over binary thrift protocol
      - "5778:5778" # serve configs
      - "16686:16686" # serve frontend
      - "4317:4317" # accept OpenTelemetry Protocol (OTLP) over gRPC, if enabled
      - "4318:4318" # accept OpenTelemetry Protocol (OTLP) over HTTP, if enabled
      - "14250:14250" # accept model.proto
      - "14268:14268" # accept jaeger.thrift directly from clients
      - "14269:14269"
      - "9411:9411" # Zipkin compatible endpoint
    depends_on:
      - test_postgresql
      - test_mariadb
    networks:
      - test

  jenkins:
    image: jenkins/jenkins:lts-jdk17
    environment:
      JENKINS_ADMIN_PASSWORD: ${JENKINS_ADMIN_PASSWORD}
    restart: always
    ports:
      - 8765:8080
      - 50000:50000
    volumes:
      - type: bind
        source: $HOME/kiwi_data/jenkins
        target: /var/jenkins_home
    networks:
      - test

  gocd-server:
    image: gocd/gocd-server:v23.5.0
    ports:
      - "8153:8153"
      - "8154:8154"
    environment:
      - GOCD_PLUGIN_INSTALL_kubernetes-elastic-agents=https://github.com/gocd-contrib/docker-elastic-agents-plugin/releases/download/v3.2.4-427/docker-elastic-agents-3.2.4-427.jar
      - AGENT_AUTO_REGISTER_KEY=${AGENT_AUTO_REGISTER_KEY}
      - AGENT_AUTO_REGISTER_RESOURCES=docker
      - AGENT_AUTO_REGISTER_ENVIRONMENTS=production
      - AGENT_AUTO_REGISTER_HOSTNAME=gocd-agent
      - AGENT_AUTO_REGISTER_DOCKER_MOUNTS=/var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - jenkins
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  gocd-agent:
    image: gocd/gocd-agent-docker-dind:v23.5.0
    environment:
      - GO_SERVER_URL=http://gocd-server:8153/go
    depends_on:
      - gocd-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  test:
    name: my_test_net
    driver: bridge
